version: '3.7'

networks:
  publicWeb:

volumes:
  tlsCertificates:
  dnsZones:
  dnsConfig:
  subscriberData:
  hpcodeProjects:

services:
  # Caddy Reverse Proxy to handle all traffic into the VPS1 Stack
  #
  # Repo: https://github.com/caddyserver/caddy
  Web:
    image: hectormolinero/caddy2:v17-amd64
    restart: unless-stopped
    command: ['run', '--config', '/etc/Caddy/Caddyfile.json']
    volumes:
      - ./Caddyfile.json:/etc/Caddy/Caddyfile.json:ro
      - tlsCertificates:/TLS:ro
    ports:
      - 80:8080
      - 443:8443/tcp
      - 443:8443/udp
    networks:
      - publicWeb
    labels:
      com.ouroboros.enable: 'true'
      com.distributed-dns.web: 'true'

  # Script that checks for updates to docker containers and recreates an identical container with new image if there is an update.
  #
  # I currently have it setup to only update containers with the docker tag of `com.ouroboros.enable: 'true'`
  #
  # Repo: https://github.com/pyouroboros/ouroboros
  Ouroboros:
    image: pyouroboros/ouroboros
    restart: unless-stopped
    container_name: ouroboros
    hostname: ouroboros
    env_file: ENVs/Ouroboros.env
    environment:
      CLEANUP: 'true'
      LOG_LEVEL: 'error'
      SELF_UPDATE: 'true'
      LABEL_ENABLE: 'true'
      LABELS_ONLY: 'true'
      TZ: 'America/Winnipeg'
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /root/.docker/config.json:/root/.docker/config.json:ro

  # BIND9 Server for serving the Zones from Distributed DNS. Zones are fetched and container is controlled by the DNSDL Service
  ns2-kjdev:
    image: resystit/bind9:latest
    restart: unless-stopped
    depends_on:
      - SubscriberDL
    volumes:
      - dnsZones:/zones:ro
      - dnsConfig:/etc/bind:ro
    ports:
      - 53:53/udp
    labels:
      com.distributed-dns.bind: 'true'
      com.ouroboros.enable: 'true'

  SubscriberDL:
    image: docker.pkg.github.com/kristianfjones/distributed-dns/distributed-dns-subscriberdl
    restart: unless-stopped
    env_file: ENVs/SubscriberDL.env
    environment:
      API_URL: 'https://dns.kristianjones.dev'
    volumes:
      - subscriberData:/data/State
      - dnsZones:/data/Zones
      - tlsCertificates:/data/TLS
      - dnsConfig:/data/BIND
      - /var/run/docker.sock:/var/run/docker.sock
    labels:
      com.ouroboros.enable: 'true'

  hpcode-kjdev:
    image: theiaide/theia-cpp:next
    restart: unless-stopped
    security_opt:
      - seccomp=unconfined
    networks:
      - publicWeb
    volumes:
      - hpcodeProjects:/home/project
