version: '3.7'

networks:
  publicWeb:
  INSERT_HEREInternal:

volumes:
  cabotDB:
  tlsCertificates:

services:
  Web:
    image: caddy/caddy:scratch
    restart: unless-stopped
    command: ['caddy', 'run', '--config', '/etc/caddy/Caddyfile.json']
    volumes:
      - ./Caddyfile.json:/etc/caddy/Caddyfile.json
      - tlsCertificates:/TLS:ro
    ports:
      - 80:8080
      - 443:8443/tcp
      - 443:8443/udp
    networks:
      - publicWeb
    labels:
      com.ouroboros.enable: 'true'
      com.distributed-dns.web: 'true'

  # Script that checks for updates to docker containers and recreates an identical container with new image if there is an update.
  #
  # I currently have it setup to only update containers with the docker tag of `com.ouroboros.enable: 'true'`
  #
  # Repo: https://github.com/pyouroboros/ouroboros
  Ouroboros:
    image: pyouroboros/ouroboros
    restart: unless-stopped
    container_name: ouroboros
    hostname: ouroboros
    env_file: ENVs/Ouroboros.env
    environment:
      CLEANUP: 'true'
      LOG_LEVEL: 'error'
      SELF_UPDATE: 'true'
      LABEL_ENABLE: 'true'
      LABELS_ONLY: 'true'
      TZ: 'America/Winnipeg'
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - $HOME/.docker/config.json:/root/.docker/config.json:ro

  jitsiWeb:
    image: jitsi/web
    restart: unless-stopped
    env_file: ENVs/Jitsi.env
    volumes:
      - jitsiWebConfig:/config
    networks:
      jitsiMeet:
        aliases:
          - meet.jitsi
      publicWeb:
    environment:
      ENABLE_AUTH: '0'
      ENABLE_GUESTS: '1'
      ENABLE_LETSENCRYPT: '0'
      ENABLE_HTTP_REDIRECT: '0'
      ENABLE_TRANSCRIPTIONS: '0'
      DISABLE_HTTPS: '1'
    labels:
      com.ouroboros.enable: 'true'

  jitsiEtherpad:
    image: jitsi/etherpad
    restart: unless-stopped
    networks:
      publicWeb:
      jitsiMeet:
        aliases:
          - etherpad.meet.jitsi

    # XMPP server
  jitsiProsody:
    image: jitsi/prosody
    restart: unless-stopped
    env_file: ENVs/Jitsi.env
    expose:
      - '5222'
      - '5347'
      - '5280'
    volumes:
      - jitsiProsodyConfig:/config
    networks:
      jitsiMeet:
        aliases:
          - xmpp.meet.jitsi
    labels:
      com.ouroboros.enable: 'true'

  jitsiJicofo:
    image: jitsi/jicofo
    restart: unless-stopped
    env_file: ENVs/Jitsi.env
    volumes:
      - jitsiJicofoConfig:/config
    networks:
      jitsiMeet:
        aliases:
          - jicofo
    depends_on:
      - jitsiProsody
    labels:
      com.ouroboros.enable: 'true'

  jitsiJigasi:
    image: jitsi/jigasi
    restart: unless-stopped
    env_file: ENVs/Jitsi.env
    networks:
      jitsiMeet:
    ports:
      - 20000-20050:20000-20050/udp
    depends_on:
      - jitsiProsody
    labels:
      com.ouroboros.enable: 'true'

  jitsiJVB:
    image: jitsi/jvb
    restart: unless-stopped
    env_file: ENVs/Jitsi.env
    volumes:
      - jitsiVideoBridgeConfig:/config
    networks:
      jitsiMeet:
        aliases:
          - jvb
    ports:
      - 10000:10000/udp
      - 4443:4443
    depends_on:
      - jitsiProsody
    labels:
      com.ouroboros.enable: 'true'
